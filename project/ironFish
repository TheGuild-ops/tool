#!/bin/bash

projectName=ironFish
mkdir /root/
mkdir /root/TGS/
mkdir /root/TGS/source
mkdir /root/TGS/data
mkdir /root/TGS/data/$projectName/
mkdir /root/TGS/bin/
function portAssign {
port=$((10000 + $RANDOM % 100000))
if [  $(ss -lntu | grep -q $port) ]; then
 echo $port
 portAssign
else
echo $port
fi
}

projectWsPort=$(portAssign)
projectPort=$(portAssign)
projectRpcPort=$(portAssign)
if [  $projectWsPort==$projectPort ]; then
: $((projectWsPort = $projectWsPort + 1))
fi

if [  $projectWsPort==$projectRpcPort ]; then
: $((projectWsPort = $projectWsPort + 1))
fi

if [  $projectPort==$projectRpcPort ]; then
: $((projectPort = $projectPort + 1))
fi

rm start
dockerName=ghcr.io/iron-fish/ironfish:latest
apt-get update && apt-get upgrade -y
ufw allow $projectPort
docker pull $dockerName 

docker stop  fish-node && docker rm  fish-node
docker stop  fish-miner && docker rm  fish-miner

docker run -d --restart always --tty --interactive --name fish-node --network host --volume $HOME/.ironfish:/root/.ironfish -p $projectPort:$projectPort $dockerName 
docker run -d --restart always -i -t  --interactive --name fish-miner --network host --volume $HOME/.ironfish:/root/.ironfish -p $projectPort:$projectPort $dockerName miners:start

docker exec fish-node ironfish config:set nodeName $(cat /root/TGS/data.json | jq ".[0].name")
docker exec fish-node ironfish config:set blockGraffiti $(cat /root/TGS/data.json | jq ".[0].name")
docker exec fish-node ironfish accounts:create $(cat /root/TGS/data.json | jq ".[0].name")
docker exec fish-node ironfish accounts:use $(cat /root/TGS/data.json | jq ".[0].name")
docker exec fish-node ironfish faucet:giveme $(cat /root/TGS/data.json | jq ".[0].name")
