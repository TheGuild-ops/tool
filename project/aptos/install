echo "enter Validator name"
read NAME
cd
mkdir node
cd node
mkdir aptos
cd aptos
docker compose down
sudo apt update && sudo apt upgrade -y
echo "export WORKSPACE=$HOME/node/aptos" >> $HOME/.bash_profile
echo "export PUBLIC_IP=$(curl -s ifconfig.me)" >> $HOME/.bash_profile
source $HOME/.bash_profile
sudo apt-get install jq unzip -y
sudo apt-get install ca-certificates curl gnupg lsb-release -y
sudo apt-get install pass gnupg2 -y

##Docker
apt update && apt install git sudo unzip wget -y
#install docker
curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh
#install docker-compose
curl -SL https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

##Aptos
wget -qO aptos-cli.zip https://github.com/aptos-labs/aptos-core/releases/download/aptos-cli-0.2.0/aptos-cli-0.2.0-Ubuntu-x86_64.zip
unzip -o aptos-cli.zip
chmod +x aptos
mv aptos /usr/local/bin 


mkdir $WORKSPACE && cd $WORKSPACE
wget -qO https://devnet.aptoslabs.com/waypoint.txt
wget -qO genesis.blob https://devnet.aptoslabs.com/genesis.blob
wget -qO docker-compose.yaml https://raw.githubusercontent.com/aptos-labs/aptos-core/main/docker/compose/public_full_node/docker-compose.yaml
wget -qO validator.yaml https://raw.githubusercontent.com/aptos-labs/aptos-core/main/docker/compose/aptos-node/validator.yaml
wget -qO public_full_node.yaml wget https://raw.githubusercontent.com/aptos-labs/aptos-core/main/docker/compose/public_full_node/public_full_node.yaml

mkdir keys
aptos genesis generate-keys --assume-no --output-dir $WORKSPACE
cp private-keys.yaml $WORKSPACE/keys/
cp validator-identity.yaml $WORKSPACE/keys/
cp validator-full-node-identity.yaml $WORKSPACE/keys/

aptos genesis set-validator-configuration \
  --keys-dir $WORKSPACE --local-repository-dir $WORKSPACE \
  --username "$NAME" \
  --validator-host `wget -qO- eth0.me`:6180 \
  --full-node-host `wget -qO- eth0.me`:6182

aptos key generate --assume-no --output-file  $WORKSPACE/keys/root

tee layout.yaml > /dev/null <<EOF
---
root_key: "F22409A93D1CD12D2FC92B5F8EB84CDCD24C348E32B3E7A720F3D2E288E63394"
users:
  - "$NAME"
chain_id: 40
min_stake: 0
max_stake: 100000
min_lockup_duration_secs: 0
max_lockup_duration_secs: 2592000
epoch_duration_secs: 86400
initial_lockup_timestamp: 1656615600
min_price_per_gas_unit: 1
allow_new_validators: true
EOF

wget -qO framework.zip https://github.com/aptos-labs/aptos-core/releases/download/aptos-framework-v0.2.0/framework.zip
unzip -o framework.zip
rm framework.zip

aptos genesis generate-genesis --assume-no --local-repository-dir $WORKSPACE --output-dir $WORKSPACE
docker compose up -d
curl https://raw.githubusercontent.com/TheGuild-ops/tool/main/install/firewall | bash 
ufw allow 8080
ufw allow 9101
ufw allow 6180
ufw allow 11420
ufw allow 22840
cat $WORKSPACE/$NAME.yaml
