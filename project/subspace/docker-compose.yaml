MONIKER=${1}
WALLET_ADDRESS=${2}
PLOT_SIZE=${3}

function portAssign {
 port=$((10000 + $RANDOM % 100000))
  if [  $(ss -lntu | grep -q $port) ]; then
   echo $port
   portAssign
  else
 echo $port
fi
}


pp2p=$(portAssign)
prpc=$(portAssign)
pws=$(portAssign)
ufw  insert 1 allow in $pp2p
ufw  insert 1 allow $prpc
ufw  insert 1 allow $pws

cat << EOF > docker-compose.yaml
version: "3.7"
services:
  node:
    image: ghcr.io/subspace/node:gemini-1b-2022-june-05
    volumes:
      - ./data:/db
    ports:
      - "0.0.0.0:$pp2p:$pp2p"
      - "0.0.0.0:$prpc:$prpc"
      - "0.0.0.0:$pws:$pws"
    restart: unless-stopped
    command: [
      "--chain", "gemini-1",
      "--base-path", "/db",
      "--execution", "wasm",
      "--pruning", "1024",
      "--keep-blocks", "1024",
      "--port", "$pp2p",
      "--rpc-cors", "all",
      "--rpc-methods", "safe",
      "--unsafe-ws-external",
      "--validator",
      "--name", "$MONIKER"
    ]
    healthcheck:
      timeout: 5s
      interval: 30s
      retries: 5
  farmer:
    depends_on:
      node:
        condition: service_healthy
    image: ghcr.io/subspace/farmer:gemini-1b-2022-june-05
    volumes:
      - ./data:/db
    restart: unless-stopped
    command: [
      "--base-path", "/db/farmer",
      "farm",
      "--node-rpc-url", "ws://node:$prpc",
      "--ws-server-listen-addr", "0.0.0.0:$pws",
      "--reward-address", "$WALLET_ADDRESS",
      "--plot-size", "$PLOT_SIZE"
    ]
volumes:
  node-data:
  farmer-data:

EOF

